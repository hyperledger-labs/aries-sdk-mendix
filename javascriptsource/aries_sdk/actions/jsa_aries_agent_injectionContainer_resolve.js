// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * resolve(token: AriesCore.InjectionToken<any>): any
 * The dependency token
 * 
 * 
 * Resolve a token into an instance
 * 
 * @return â€” An instance of the dependency
 * @param {string} agent_key
 * @param {string} token - json?
 * @returns {Promise.<string>}
 */
export async function jsa_aries_agent_injectionContainer_resolve(agent_key, token) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");										//mandatory
		if(token==null)return Promise.reject("Invalid token parameter");										//mandatory
		try{
			token=JSON.parse(token);
		}catch(e){
			return Promise.reject("Argument token is not a valid JSON object");
		}
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		return Promise.resolve(JSON.stringify(agent.injectionContainer.resolve(token)));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
