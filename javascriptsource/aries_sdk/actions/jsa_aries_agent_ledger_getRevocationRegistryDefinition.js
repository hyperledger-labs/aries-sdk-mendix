// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import support from"../support/entidad";
// END EXTRA CODE

/**
 * https://github.com/hyperledger/aries-framework-javascript/blob/47636b4a08ffbfa9a3f2a5a3c5aebda44f7d16c8/packages/anoncreds/src/services/registry/AnonCredsRegistry.ts
 * 
 *   getRevocationRegistryDefinition(
 *     agentContext: AgentContext,
 *     revocationRegistryDefinitionId: string
 *   ): Promise<GetRevocationRegistryDefinitionReturn>
 * 
 * https://github.com/hyperledger/aries-framework-javascript/blob/de90cafb8d12b7a940f881184cd745c4b5043cbc/packages/anoncreds/tests/anoncreds.test.ts
 * @param {string} agent_key
 * @param {string} revocationRegistryDefinitionId
 * @returns {Promise.<string>}
 */
export async function jsa_aries_agent_ledger_getRevocationRegistryDefinition(agent_key, revocationRegistryDefinitionId) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");											//mandatory
		if(revocationRegistryDefinitionId==null)return Promise.reject("Invalid revocationRegistryDefinitionId parameter");	//mandatory
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		return Promise.resolve(JSON.stringify(await agent.ledger.getRevocationRegistryDefinition(revocationRegistryDefinitionId)));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
