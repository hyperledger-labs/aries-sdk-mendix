// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import support from "../support/entidad";
// END EXTRA CODE

/**
 * getCreatedDids({ method }?: { method?: string; }): Promise<AriesCore.DidRecord[]>
 * Get a list of all dids created by the agent. This will return a list of {@link DidRecord } objects. Each document will have an id property with the value of the did. Optionally, it will contain a did document, but this is only for documents that can't be resolved from the did itself or remotely.
 * 
 * You can call `${@link DidsModule.resolve } to resolve the did document based on the did itself.
 * 
 * https://github.com/hyperledger/aries-framework-javascript/blob/main/packages/core/src/modules/dids/DidsApi.ts
 * @param {string} agent_key
 * @param {string} method
 * @returns {Promise.<string>}
 */
export async function jsa_aries_agent_dids_getCreatedDids(agent_key, method) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");										//mandatory
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		if(method==null){
			return Promise.resolve(JSON.stringify(await agent.dids.getCreatedDids()));
		}else{
			return Promise.resolve(JSON.stringify(await agent.dids.getCreatedDids({method:method})));
		}
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
