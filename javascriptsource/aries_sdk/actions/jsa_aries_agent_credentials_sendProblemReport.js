// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
import support from"../support/entidad";
// END EXTRA CODE

/**
 * https://github.com/hyperledger/aries-framework-javascript/blob/dbfebb4720da731dbe11efdccdd061d1da3d1323/packages/core/src/modules/credentials/CredentialsApi.ts
 * 
 *    * Send problem report message for a credential record
 *    * @param credentialRecordId The id of the credential record for which to send problem report
 *    * @param message message to send
 *    * @returns credential record associated with the credential problem report message
 *   public async sendProblemReport(options: SendCredentialProblemReportOptions) {
 * @param {string} agent_key
 * @param {string} options - json
 * @returns {Promise.<void>}
 */
export async function jsa_aries_agent_credentials_sendProblemReport(agent_key, options) {
	// BEGIN USER CODE
	try{
		if(agent_key==null)return Promise.reject("Invalid agent_key parameter");										//mandatory
		if(options==null)return Promise.reject("Invalid options parameter");										//mandatory
		try{
			options=JSON.parse(options);
		}catch(e){
			return Promise.reject("Argument options is not a valid JSON object");
		}
		let agent=support.cache.get(agent_key);
		if(agent==null)return Promise.reject("Agent not found in cache");
		await agent.credentials.sendProblemReport(options);
		return Promise.resolve();
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
