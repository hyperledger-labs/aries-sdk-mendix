// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {Nanoflow} callback - Flow to execute
 * @param {Big} timeout - Milliseconds timeout
 * @param {string} json_args - optional simple types only e.g. {"p0":42,"p1":"foo"}
 * @param {boolean} show_progress
 * @param {string} progress_message
 * @returns {Promise.<void>}
 */
export async function jsa_nf_timeout(callback, timeout, json_args, show_progress, progress_message) {
	// BEGIN USER CODE
	try{
		if(callback==null)return Promise.reject("Invalid callback parameter");	//mandatory
		if(timeout==null)return Promise.reject("Invalid timeout parameter");	//mandatory
		if(json_args==null)json_args="{}";										//default
		let json_args_=null;
		try{
			json_args_=JSON.parse(json_args);
		}catch(e){
			return Promise.reject("Failed to parse json_args");
		}
		setTimeout(()=>{
			let args=json_args_;
			if(show_progress){
    			const id=mx.ui.showProgress(progress_message==null?"":progress_message,false);
				callback(args);
				mx.ui.hideProgress(id);
			}else{
				callback(args);
			}
		},timeout.toNumber());
		return Promise.resolve();
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
