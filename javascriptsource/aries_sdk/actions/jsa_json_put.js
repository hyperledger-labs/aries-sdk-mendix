// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Adds a key value pair to a JSON object
 * @param {string} json
 * @param {string} path
 * @param {string} value
 * @returns {Promise.<string>}
 */
export async function jsa_json_put(json, path, value) {
	// BEGIN USER CODE
	try{
		let root=JSON.parse(json);
		let cur=root;
		let path_components=path.split(".");
		try{
			if(
				value[0]=="{"&&value[value.length-1]=="}"
				||
				value[0]=="["&&value[value.length-1]=="]"
			){
				value=JSON.parse(value);
			}else if(value=="true"){
				value=true;
			}else if(value=="false"){
				value=false;
			}else{
				//todo:numerics
			}
		}catch(e){}
		path_components.forEach((k,i)=>{
			if(i==path_components.length-1){
				if(
					k.lastIndexOf(']')==k.length-1
					&&k.lastIndexOf("[")!=-1
					&&k.lastIndexOf("[")<k.lastIndexOf(']')
				){
					let sidx=k.substring(k.lastIndexOf('[')+1,k.length-1);
					let idx=parseInt(sidx);
					if(!isNaN(idx)){
						k=k.substring(0,k.lastIndexOf("["));
						if(!Array.isArray(cur[k])){
							cur[k]=[];
						}
						cur[k][idx]=value;
						return;
					}
				}
				cur[k]=value;
			}else{
				if(
					k.lastIndexOf(']')==k.length-1
					&&k.lastIndexOf("[")!=-1
					&&k.lastIndexOf("[")<k.lastIndexOf(']')
				){
					let sidx=k.substring(k.lastIndexOf('[')+1,k.length-1);
					let idx=parseInt(sidx);
					if(!isNaN(idx)){
						k=k.substring(0,k.lastIndexOf("["));
						if(!Array.isArray(cur[k])){
							cur[k]=[];
						}
						cur[k][idx]={};
						cur=cur[k][idx];
						return;
					}
				}
				if(typeof(cur[k])!="object"){
					cur[k]={};
				}
				cur=cur[k];
			}
		});
		return Promise.resolve(JSON.stringify(root));
	}catch(e){
		return Promise.reject(e.toString());
	}

	// END USER CODE
}
